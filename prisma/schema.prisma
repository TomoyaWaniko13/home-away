// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id           String   @id @default(uuid())
  clerkId      String   @unique
  firstName    String
  lastName     String
  username     String
  email        String
  profileImage String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // 一人のユーザー（Profile）が複数の物件（Property）を所有または管理できることを意味します。
  properties Property[]
  // ユーザー（Profile）がお気に入りに登録した物件（Property）を表しています。
  favorites  Favorite[]
}

// 86. Property Schema
model Property {
  id          String   @id @default(uuid())
  name        String
  tagline     String
  category    String
  image       String
  country     String
  description String
  price       Int
  guests      Int
  bedrooms    Int
  beds        Int
  baths       Int
  amenities   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // この特定の物件(Property)をお気に入りに登録したユーザーのリストを表しています。
  favorites Favorite[]

  // propertyAction.ts において、profileId に clerk の ID を設定します。
  profileId String
  profile   Profile @relation(fields: [profileId], references: [clerkId], onDelete: Cascade)
}

// 107. Favorites SignIn Button
// 各 Favorite エントリは、1人のユーザー(Profile)が1つの物件(Property)をお気に入りに登録したことを表す記録です。
model Favorite {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profileId String
  profile   Profile @relation(fields: [profileId], references: [clerkId])

  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}
